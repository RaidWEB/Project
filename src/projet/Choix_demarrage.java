/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

package projet;

import com.dropbox.core.DbxClient;
import com.dropbox.core.DbxException;
import com.google.api.services.drive.Drive;
import java.io.IOException;
import java.util.Vector;


import javax.swing.ImageIcon;

/**
 *
 * @author Munoz and Porret
 */
public class Choix_demarrage extends javax.swing.JFrame implements Runnable{
    
    private ProgressBar_resynchro progressBar_resynchro;
    private String password;
    final private String gooogleDirectory;
    final private DbxClient jetonDropbox;
    final private Drive serviceGoogle;
    
    public Choix_demarrage(DbxClient jetonDropbox,Drive serviceGoogle,String googleDirectory) {
        this.gooogleDirectory=googleDirectory;
        this.jetonDropbox=jetonDropbox;
        this.serviceGoogle=serviceGoogle;
        initComponents();
        jTextArea1.setBorder(null);
        jScrollPane1.setBorder(null);
        this.setIconImage(new ImageIcon(getClass().getResource("/images/download-cloud3.png")).getImage());
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("RAID Web - Choix du démarrage");
        setResizable(false);

        jTextArea1.setEditable(false);
        jTextArea1.setBackground(new java.awt.Color(240, 240, 240));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(0, 0, 102));
        jTextArea1.setRows(5);
        jTextArea1.setText("Choix du mode de démarrage du programme:\n-Si vous ne voulez qu'envoyer des fichiers sur les clouds, veuillez cliquer sur le bouton\n\"Envoi simple\"\n-Sinon, cliquez sur le bouton \"Envoyer et télcharger\"");
        jTextArea1.setBorder(null);
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/VPC_Cloud_Lock.png"))); // NOI18N

        jButton1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 102));
        jButton1.setText("Envoi simple");
        jButton1.setToolTipText("");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 102));
        jButton2.setText("Envoyer et télécharger");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(17, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2)))))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        /* Démarrage de l'interface pricipale sans resynchronisation et sans récupération de la liste des fichiers
        présents sur les clouds*/
        this.dispose();
        
        Interface_principale interface_principale=new Interface_principale(jetonDropbox, serviceGoogle, gooogleDirectory,password);
        interface_principale.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      
        /* Démarrage de l'interface pricipale avec resynchronisation et avec récupération de la liste des fichiers
        présents sur les clouds*/
        this.dispose();
        
        progressBar_resynchro=new ProgressBar_resynchro();
        new Thread(this).start();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    public void setPassword(String password) {
        this.password = password;
        
    }
    
    /**
     * @param args the command line arguments
     */
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
    
    @Override
    public void run() {
        try {
            Vector<Fichier> listeFichier = GoogledropFunction.printFilesInFolder(serviceGoogle, jetonDropbox, gooogleDirectory,progressBar_resynchro);
            Interface_principale interface_principale=new Interface_principale(jetonDropbox,serviceGoogle,gooogleDirectory,listeFichier,password);
            interface_principale.traitement_vecteur();
            interface_principale.setVisible(true);
            interface_principale.setAlwaysOnTop(true);
            interface_principale.setAlwaysOnTop(false);
            
        } catch (DbxException ex) {
            String message = "Problème de connexion avec le serveur Dropbox";
            ExceptionDialog exceptionDialog=new ExceptionDialog(this, true, message);
            exceptionDialog.setVisible(true);
        } catch (IOException ex) {
            String message = "Problème de connexion avec le serveur Google";
            ExceptionDialog exceptionDialog=new ExceptionDialog(this, true, message);
            exceptionDialog.setVisible(true);
        }
    }
}
