/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/

package projet;

import com.dropbox.core.DbxClient;
import com.dropbox.core.DbxException;
import com.google.api.services.drive.Drive;
import com.google.api.services.drive.model.ChildList;
import com.google.api.services.drive.model.ChildReference;
import com.google.api.services.drive.model.File;
import java.io.IOException;
import java.util.Iterator;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.print.DocFlavor;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author Munoz and Porret
 */
public class Remove_adv extends javax.swing.JDialog implements Runnable{
    
    /**
     * Creates new form Remove_adv
     */
    private final Fichier fichier;
    private JPanel jPanel2,jPanel1;
    final private DbxClient jeton;
    final private Drive serviceGoogle;
    private Interface_principale interface_principale;
    private ProgressBar_resynchro progressBar_resynchro;
    private final String folderId;
    
    
    public Remove_adv(Interface_principale parent, boolean modal,Fichier fichier,JPanel jPanel2,JPanel jPanel1,DbxClient jeton,Drive serviceGoogle,String folderId)
    {
        
        super(parent, modal);
        this.folderId=folderId;
        this.interface_principale=parent;
        this.fichier=fichier;
        this.jPanel2=jPanel2;
        this.jPanel1=jPanel1;
        this.jeton=jeton;
        this.serviceGoogle=serviceGoogle;
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/images/download-cloud3.png")).getImage()); 
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("RAID Web - Avertissemment de suppression distante");
        setAlwaysOnTop(true);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/Warning.png"))); // NOI18N

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 102));

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 102));
        jLabel3.setText("Etes-vous sur de vouloir poursuivre? ");

        jButton1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(0, 0, 102));
        jButton1.setText("Oui");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(0, 0, 102));
        jButton2.setText("Non");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Verdana", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 0, 102));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createSequentialGroup()
                                    .addGap(134, 134, 134)
                                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 158, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    public void setjLabel2text(String message) {
        jLabel2.setText(message);
    }
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        
        // TODO add your handling code here:
        dispose();
        progressBar_resynchro=new ProgressBar_resynchro();
        progressBar_resynchro.setjLabeltext("Suppression des parties du fichier "+fichier.getName()+" en cours ");
        new Thread(this).start();
        
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    @Override
    public void run() {
        try {
            
            String testname1="";
            String testname2="";
            boolean bool2=false;
            boolean bool3=false;
            String googleId_File1="";
            String googleId_File2="";
            String dropboxId1=fichier.getName()+".1";
            String dropboxId2=fichier.getName()+".2";
            String googleFilename1=fichier.getName()+".3";
            String googleFilename2=fichier.getName()+".4";
            Drive.Children.List request = serviceGoogle.children().list(folderId).setQ("trashed=false " + "and title='" + googleFilename1 + "'");
            Drive.Children.List request1 = serviceGoogle.children().list(folderId).setQ("trashed=false " + "and title='" + googleFilename2 + "'");
            ChildList children = request.execute();
            ChildList children1 = request1.execute();
            List<ChildReference> google1= children.getItems();
            List<ChildReference> google2= children1.getItems();
            Iterator<ChildReference> it=google1.iterator() ;
            Iterator<ChildReference> it1=google2.iterator() ;
            
               while(it.hasNext() && bool2==false)
            {
                ChildReference fichier1=(ChildReference)it.next();
                
                File file1 = serviceGoogle.files().get(fichier1.getId()).execute();
                testname1=file1.getTitle();
                
                // System.out.println(testname1);
                //System.out.println(testname1);
                if(googleFilename1.equals(testname1))
                {
                    bool2=true;
                    
                    googleId_File1=file1.getId();
                    
                }
                
            }
            
           
            
            while(it1.hasNext() && bool3==false)
            {
                ChildReference fichier2=(ChildReference)it1.next();
                
                File file1 = serviceGoogle.files().get(fichier2.getId()).execute();
                testname2=file1.getTitle();
                
                
                if(googleFilename2.equals(testname2))
                {
                    bool3=true;
                  
                    googleId_File2=file1.getId();
                    
                }
                
                
            }
            
            
            GoogleFunction.deleteFile(serviceGoogle,googleId_File1);
            GoogleFunction.deleteFile(serviceGoogle, googleId_File2);
            Dropbox_function.delete(jeton, dropboxId1);
            Dropbox_function.delete(jeton, dropboxId2);
            jPanel1.remove(jPanel2);
            jPanel1.doLayout();
            jPanel1.repaint();
            progressBar_resynchro.dispose();
            String message="Les parties du fichier "+fichier.getName()+" ont été supprimés.";
            ReussiteDialog reussiteDialog=new ReussiteDialog(interface_principale, rootPaneCheckingEnabled, message);
            reussiteDialog.setVisible(true);
            
        } catch (DbxException ex) {
            dispose();
            String message="Les parties du fichiers "+fichier.getName()+" n'ont pas pu être supprimé.";
            ExceptionDialog exceptionDialog=new ExceptionDialog(interface_principale ,true, message);
            exceptionDialog.setVisible(true);
            progressBar_resynchro.dispose();
            jPanel1.remove(jPanel2);
            jPanel1.doLayout();
            jPanel1.repaint();
            
            
        } catch (IOException ex) {
            Logger.getLogger(Remove_adv.class.getName()).log(Level.SEVERE, null, ex);
            progressBar_resynchro.dispose();
            jPanel1.remove(jPanel2);
            jPanel1.doLayout();
            jPanel1.repaint();
        }
    }
    /**
     * @param args the command line arguments
     */
    
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
    
    
}
